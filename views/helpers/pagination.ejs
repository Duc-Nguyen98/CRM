<% paginationHelper=(paginationObj,type,currentStatus,keyword)=>{
    let totalItems = paginationObj.totalItems;
    let currentPage = paginationObj.currentPage;
    let totalItemsPerPage = paginationObj.totalItemsPerPage;
    let totalPages = Math.ceil(totalItems / totalItemsPerPage);
    let to = totalItemsPerPage * currentPage;
    let from = to - totalItemsPerPage + 1;
    let pageRanges = paginationObj.pageRanges;
    let xhtmlPagination = '';

    if(to>totalItems) to = totalItems;

    if(totalPages > 1){
    let xhtmlStart = `<li class="page-item page-indicator isDisabled"><a class="page-link"><i
                class="la la-angle-double-left"></i></a></li>`;

    let xhtmlPrevious = `<li class="page-item page-indicator isDisabled"><a class="page-link"><i
                class="la la-angle-left"></i></a></li>`;
    let xhtmlNext = `<li class="page-item page-indicator isDisabled"><a class="page-link"><i
                class="la la-angle-right"></i></a></li>`;
    let xhtmlEnd = `<li class="page-item page-indicator isDisabled"><a class="page-link"><i
                class="la la-angle-double-right"></i></a></li>`;
    let xhtmlPages = ``;


    if(currentPage > 1){
    xhtmlStart = `<li class="page-item page-indicator"><a class="page-link" href="/customer/?page=1"><i
                class="la la-angle-double-left"></i></a></li>`;
    xhtmlPrevious = `<li class="page-item page-indicator "><a class="page-link" href="/customer/?page=${currentPage-1}"><i
                class="la la-angle-left"></i></a></li>`;
    }

    if(currentPage < totalPages){ xhtmlNext=`<li class="page-item page-indicator "><a class="page-link"
            href="/customer/?page=${currentPage+1}"> <i class="la la-angle-right"></i></a></li>`;
        xhtmlEnd = `<li class="page-item page-indicator"><a class="page-link" href="/customer/?page=${totalPages}"><i
                    class="la la-angle-double-right"></i></a></li>`;
        }

        let middle = Math.ceil(pageRanges/2);
        let min = currentPage-middle+1;
        let max= min + pageRanges -1;

        if(min <= 1){ min=1; max=pageRanges; } if(max> totalPages){
            max = totalPages;
            min = ((max-pageRanges+1)>= 1) ? max-pageRanges+1 : 1;
            }

            for (let i = min; i <= max; i++) { if(i==currentPage) { xhtmlPages +=`<li class="page-item active"><a
                    class="page-link">${i}</a></li>`;
                }else{
                xhtmlPages += `<li class="page-item "><a class="page-link" href="/customer/?page=${i}">${i}</a></li>`;
                }
                }
                xhtmlPagination = `<ul class="pagination pagination-gutter pagination-primary no-bg" style="cursor: pointer;"> ${xhtmlStart}
                    ${xhtmlPrevious} ${xhtmlPages} ${xhtmlNext} ${xhtmlEnd} </ul>`;
                }

                return`
                <div class="card-footer">
                    <div class="d-flex justify-content-between">
                        <div>
                            <p>Number of elements on the page: <b><span class="text-primary">${totalItemsPerPage}</span>
                                    |</b>
                                <span>Total Entries: <b><span class="text-primary">${totalItems}</span></b>.</span>
                            </p>
                            <p>Showing <b><span class="text-primary">${from}</span></b> to <b><span
                                        class="text-primary">${to}</span></b> of <b><span
                                        class="text-primary">${totalItems}</span></b> entries<b> | </b> <span
                                    class="text-primary"></span>Total Pages:<b><span class="text-primary">
                                        ${totalPages}</span></b>.</span>

                            </p>

                        </div>
                        <nav class="d-flex justify-content-end">
                            ${xhtmlPagination}
                        </nav>
                    </div>
                </div>`;

                } %>